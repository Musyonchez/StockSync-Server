"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
// users.ts
var apollo_server_express_1 = require("apollo-server-express");
var typeDefs = (0, apollo_server_express_1.gql)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  type Users {\n    id: String\n    firstName: String\n    lastName: String\n    age: Int\n    email: String\n    store1: Boolean\n    store2: Boolean\n    store3: Boolean\n    store4: Boolean\n    role: UserRole\n  }\n\n  type User {\n    id: String\n    firstName: String\n    lastName: String\n    age: Int\n    email: String\n    password: String\n    store1: Boolean\n    store2: Boolean\n    store3: Boolean\n    store4: Boolean\n    company: String\n    role: UserRole\n  }\n\n  enum UserRole {\n    SUPERADMIN\n    ADMIN\n    USER\n  }\n\n  type Query {\n    users(company: String!, type: String!): [Users]\n    user(id: String!, company: String!, type: String!): User\n    authenticateUser(email: String!, password: String!, company: String!): User\n  }\n\n  type Mutation {\n    addUser(\n      firstName: String\n      lastName: String\n      age: Int\n      email: String\n      password: String\n      store1: Boolean\n      store2: Boolean\n      store3: Boolean\n      store4: Boolean\n      role: UserRole\n      company: String\n      type: String\n    ): User\n\n    editUser(\n      id: String!\n      firstName: String\n      lastName: String\n      age: Int\n      email: String\n      password: String\n      store1: Boolean\n      store2: Boolean\n      store3: Boolean\n      store4: Boolean\n      role: UserRole\n      company: String\n      type: String\n    ): User\n\n    deleteUser(id: String!, company: String!, type: String!): User\n  }\n"], ["\n  type Users {\n    id: String\n    firstName: String\n    lastName: String\n    age: Int\n    email: String\n    store1: Boolean\n    store2: Boolean\n    store3: Boolean\n    store4: Boolean\n    role: UserRole\n  }\n\n  type User {\n    id: String\n    firstName: String\n    lastName: String\n    age: Int\n    email: String\n    password: String\n    store1: Boolean\n    store2: Boolean\n    store3: Boolean\n    store4: Boolean\n    company: String\n    role: UserRole\n  }\n\n  enum UserRole {\n    SUPERADMIN\n    ADMIN\n    USER\n  }\n\n  type Query {\n    users(company: String!, type: String!): [Users]\n    user(id: String!, company: String!, type: String!): User\n    authenticateUser(email: String!, password: String!, company: String!): User\n  }\n\n  type Mutation {\n    addUser(\n      firstName: String\n      lastName: String\n      age: Int\n      email: String\n      password: String\n      store1: Boolean\n      store2: Boolean\n      store3: Boolean\n      store4: Boolean\n      role: UserRole\n      company: String\n      type: String\n    ): User\n\n    editUser(\n      id: String!\n      firstName: String\n      lastName: String\n      age: Int\n      email: String\n      password: String\n      store1: Boolean\n      store2: Boolean\n      store3: Boolean\n      store4: Boolean\n      role: UserRole\n      company: String\n      type: String\n    ): User\n\n    deleteUser(id: String!, company: String!, type: String!): User\n  }\n"])));
exports.default = typeDefs;
var templateObject_1;
